import telebot 
import db_writer as db
import admin
import keyboard
import loyal
from telebot import types

bot = telebot.TeleBot('5965053048:AAFHcfnh0S3fbMhEofqHzvB-9eKE5xv1rUs')

admin_psswrd = '33133313'
barista_psswrd = '13331333'

@bot.message_handler(commands=['start'])
def welcome(message):
   user_id = message.from_user.id
   username = message.from_user.first_name
   
   if db.read_users(user_id) == None:
       db.new_users(user_id=user_id, username=username)
   markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
   item1 = types.KeyboardButton('–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?')
   markup.add(item1)
   bot.send_message(user_id, '''–ü—Ä–∏–≤–µ—Ç!
–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å?''', reply_markup = markup)

@bot.message_handler(commands=['admin'])
def validation(message):
    user_id = message.from_user.id

    val = db.read_psw_val(user_id = user_id, username=message.from_user.first_name, table='admin')

    if str(db.read_status(user_id = user_id, table='admin')) == admin_psswrd:
        bot.send_message(user_id, f'{message.from_user.first_name}, —Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!')
        keyboard.admin(message)
    elif val < 3:
        msg = bot.send_message(user_id, f'–ü–æ–ø—ã—Ç–∫–∞ {val+1}\n–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:')
        db.trying(user_id = user_id, val = val+1, table='admin')
        bot.register_next_step_handler(msg, enter_psswrd)
    else:
        bot.send_message(user_id, '–ü—Ä–µ–≤—ã—à–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.')

@bot.message_handler(commands=['barista'])
def validation(message):
    user_id = message.from_user.id

    val = db.read_psw_val(user_id = user_id, username=message.from_user.first_name, table='barista')

    if str(db.read_status(user_id = user_id, table='barista')) == barista_psswrd:
        bot.send_message(user_id, f'{message.from_user.first_name}, —Ç—ã –±–∞—Ä–∏—Å—Ç–∞!')
        keyboard.barista(message)
    elif val < 3:
        msg = bot.send_message(user_id, f'–ü–æ–ø—ã—Ç–∫–∞ {val+1}\n–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:')
        db.trying(user_id = user_id, val = val+1, table='barista')
        bot.register_next_step_handler(msg, enter_psswrd)
    else:
        bot.send_message(user_id, '–ü—Ä–µ–≤—ã—à–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.')

def enter_psswrd(message):
    user_id = message.from_user.id
    pas = message.text
    if pas == admin_psswrd:
        bot.send_message(user_id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!')
        db.edit_table(user_id = user_id, table='admin', coloumn = 'val', value = admin_psswrd)
        keyboard.admin(message)
    elif pas == barista_psswrd:
        bot.send_message(user_id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –±–∞—Ä–∏—Å—Ç–∞!')
        db.edit_table(user_id = user_id, table='barista', coloumn = 'val', value = barista_psswrd)
        keyboard.barista(message)
    else:
        bot.send_message(user_id, '–ü–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω—ã–π')

@bot.message_handler(content_types=['text'])
def buttons(message):
    user_id = message.from_user.id

    global user
    value = message.text.lower()

    match value:
        case '—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å?':
            with open('messages/welcome.txt', 'r', encoding='utf-8') as f:
                message_text = f.read()
            bot.send_message(user_id, message_text)
            keyboard.user(message)
        case '–∞–¥—Ä–µ—Å–∞':
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–í–æ—Ä–æ—à–∏–ª–æ–≤–∞", callback_data='–í–æ—Ä–æ—à–∏–ª–æ–≤–∞')
            item2 = types.InlineKeyboardButton("–ö–∏—Ä–æ–≤–∞", callback_data='–ö–∏—Ä–æ–≤–∞')
            item3 = types.InlineKeyboardButton("–ü–∞–º—è—Ç–Ω–∏–∫ –°–ª–∞–≤—ã", callback_data='–ü–∞–º—è—Ç–Ω–∏–∫ –°–ª–∞–≤—ã')
            item4 = types.InlineKeyboardButton("–ü–ª–µ—Ö–∞–Ω–æ–≤—Å–∫–∞—è", callback_data='–ü–ª–µ—Ö–∞–Ω–æ–≤—Å–∫–∞—è')

            markup.add(item1, item2, item3, item4)

            bot.send_message(user_id, '–í—ã–±–µ—Ä–∏ –∞–¥—Ä–µ—Å', reply_markup = markup)
        case '–æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å':
            msg = bot.send_message(user_id, '–ù–∞–ø–∏—à–∏ –æ —Å–≤–æ–∏—Ö –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è—Ö')
            bot.register_next_step_handler(msg, callback)
        case '–±–∞–ª–ª—ã':
            keyboard.webAppKeyboard(message)
        case '–æ –Ω–∞—Å':
            with open('messages/about_us.txt', 'r', encoding='utf-8') as f:
                message_text = f.read()
            bot.send_message(user_id, message_text)
        case '–æ—Å—Ç–∞–≤–∏—Ç—å —á–∞–µ–≤—ã–µ':
            markup = types.InlineKeyboardMarkup()
            button1 = types.InlineKeyboardButton('–ò–≤–∞–Ω', callback_data='ivan')
            button2 = types.InlineKeyboardButton('–ú–∞—Ä–∏—è', callback_data='maria')
            button3 = types.InlineKeyboardButton('–ü–µ—Ç—Ä', callback_data='petr')
            markup.add(button1, button2, button3)
                
            bot.send_message(user_id, '–í—ã–±–µ—Ä–∏—Ç–µ –±–∞—Ä–∏—Å—Ç–∞:', reply_markup=markup)
        case '–≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥':
            keyboard.user(message)
        case '–±–∞–ª–∞–Ω—Å':
            inf = db.read_users(user_id = message.chat.id)
            msg = f'''üåü –í–∞—à–∏ –±–∞–ª–ª—ã: {inf[3]}
üéØ –î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è: {loyal.level(inf[3])}
üí∞ –¢–µ–∫—É—â–∞—è —Å–∫–∏–¥–∫–∞: {loyal.discount(inf[3])}%'''
            bot.send_message(user_id, msg)
        case '–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –≥–æ—Å—Ç—è':
                keyboard.user(message)

    if str(db.read_status(user_id=user_id, table='admin')) == admin_psswrd:
        match value:
            case '–æ—Ç—á–µ—Ç –ø–æ —Å–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π':
                bot.send_message(user_id, 'Yes')
            case '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã':
                miss = db.read_callback()
                if miss is not None:
                    db.complete_callback(mass=miss)
                    bot.forward_message(user_id, from_chat_id=miss[1], message_id=miss[3])
                else:
                    bot.send_message(user_id, '–ù–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ—Ç')
            case '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É':
                bot.send_message(user_id, 'Yes')
            case '—Å–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É':
                markup = types.InlineKeyboardMarkup(row_width=1)
                button1 = types.InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='enter_mail')
                button2 = types.InlineKeyboardButton('–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data='decline_mail')
                markup.add(button1, button2)
                    
                bot.send_message(user_id, '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É?', reply_markup=markup)

    if str(db.read_status(user_id=user_id, table='barista')) == barista_psswrd:
        match value:
            case '–Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤':
                msg = bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
                bot.register_next_step_handler(msg, request)

def request(message):
    ID = int(message.text)
    msg = bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤')
    bot.register_next_step_handler(msg, request_1, ID)

def request_1(message, ID):
    sum = int(message.text)
    inf = db.read_users(user_id=ID)
    sum = sum + inf[3]
    db.edit_table(user_id=ID, table='users', coloumn='sum', value=sum)
    bot.send_message(message.from_user.id, '–ë–∞–ª–ª—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∏—Å–ª–µ–Ω—ãüéÜ')

def callback(message):
    user_id = message.from_user.id
    db.new_callback(message=message)
    admin.callback_notify(message)
    bot.send_message(user_id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!")

@bot.callback_query_handler(func = lambda call: True)
def callback_inline(call):
    user_id = call.from_user.id
    global sum
    global user

    value = call.data
    match value:
        case '–í–æ—Ä–æ—à–∏–ª–æ–≤–∞':
            bot.send_message(user_id, '–í–æ—Ä–æ—à–∏–ª–æ–≤–∞:')
            bot.send_location(user_id, 51.654749, 39.178763)
        case '–ö–∏—Ä–æ–≤–∞':
            bot.send_message(user_id, '–ö–∏—Ä–æ–≤–∞:')
            bot.send_location(user_id, 51.659781, 39.195710)
        case '–ü–∞–º—è—Ç–Ω–∏–∫ –°–ª–∞–≤—ã':
            bot.send_message(user_id, '–ü–∞–º—è—Ç–Ω–∏–∫ –°–ª–∞–≤—ã:')
            bot.send_location(user_id, 51.702425, 39.182282)
        case '–ü–ª–µ—Ö–∞–Ω–æ–≤—Å–∫–∞—è':
            bot.send_message(user_id, '–ü–ª–µ—Ö–∞–Ω–æ–≤—Å–∫–∞—è:')
            bot.send_location(user_id, 51.668416, 39.192764)
        case 'read':
            miss = db.read_callback()
            db.complete_callback(mass=miss)
            bot.forward_message(user_id, from_chat_id=miss[1], message_id=miss[3])
        case 'ivan':
            bot.send_message(user_id, '–ë–∞—Ä–∏—Å—Ç–∞: –ò–≤–∞–Ω\n–†–µ–∫–≤–∏–∑–∏—Ç—ã: 1234567890')
        case 'maria':
            bot.send_message(user_id, '–ë–∞—Ä–∏—Å—Ç–∞: –ú–∞—Ä–∏—è\n–†–µ–∫–≤–∏–∑–∏—Ç—ã: 0987654321')
        case 'petr':
            bot.send_message(user_id, '–ë–∞—Ä–∏—Å—Ç–∞: –ü–µ—Ç—Ä\n–†–µ–∫–≤–∏–∑–∏—Ç—ã: 5555555555')
        case 'accept':
            addit(user_id, sum)
            bot.send_message(user_id, f'–ó–∞—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user} –Ω–∞ —Å—É–º–º—É {sum} –ø—Ä–∏–Ω—è—Ç')
            bot.send_message(user, '–ë–∞–ª–ª—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∏—Å–ª–µ–Ω—ãüéÜ')
        case 'decline':
            bot.send_message(user_id, f'–ó–∞—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user} –Ω–∞ —Å—É–º–º—É {sum} –æ—Ç–∫–ª–æ–Ω–µ–Ω')
            bot.send_message(user, '–ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω–µ–Ωüò•')
        case 'enter_mail':
            msg = bot.send_message(user_id, '–í—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏')
            bot.register_next_step_handler(msg, admin.mailing)
        case 'decline_mail':
            bot.send_message(user_id, '–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞')
    bot.delete_message(user_id, call.message.id)

def addit(webAppMes, sum):
    global user
    inf = db.read_users(user_id=user)
    sum = int(sum)
    sum = sum + inf[3]
    db.edit_table(user_id=user, table='users', coloumn='sum', value=sum)

@bot.message_handler(content_types=['web_app_data']) #–ø–æ–ª—É—á–∞–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ 
def answer(webAppMes):
    global user
    user = webAppMes.chat.id
    global sum
    sum = webAppMes.web_app_data.data
    bot.send_message(webAppMes.chat.id, f"–ó–∞–ø—Ä–æ—Å –Ω–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤ –ø–æ –∑–∞–∫–∞–∑—É –Ω–∞ —Å—É–º–º—É {sum} –ø—Ä–∏–Ω—è—Ç. –ë–æ–Ω—É—Å—ã –Ω–∞—á–∏—Å–ª—è—Ç—Å—è –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã.") 
    markup = types.InlineKeyboardMarkup(row_width=1)
    button1 = types.InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='accept')
    button2 = types.InlineKeyboardButton('–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data='decline')
    markup.add(button1, button2)
        
    bot.send_message(706589393, '''–ó–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω?''', reply_markup=markup)

bot.infinity_polling()